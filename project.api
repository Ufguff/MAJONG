# menu.h new_game.h
!main.cpp graphics.h keys_n_colors.h menu.h new_game.h #<#>
!menu.cpp graphics.h keys_n_colors.h menu.h new_game.h #<#>
!menu.h graphics.h keys_n_colors.h #<#>
!new_game.cpp algorithm cmath ctime graphics.h iostream keys_n_colors.h menu.h new_game.h random string thread utility vector #<#>
 struct@TILE _type_ #<new_game.h>
 struct@button _type_ #<menu.h>
AVOCADO #<new_game.h>
BEIGE #<new_game.h>
CON_TILES : int #<new_game.cpp>
ELVOLT #<menu.h>
FONTS #<menu.h>
Pole : const intwi=7, he=5;TILE[][][] #<new_game.cpp>
TILE _type_ #<new_game.h>
about() -> void #<menu.h>
acc_avl() -> void #<new_game.h>
avl_tile : vector #<new_game.cpp>
begOfX : int #<new_game.cpp>
begOfY : int #<new_game.cpp>
begin : const intbuttonH=90;const int mid_width=width/2, mid_height=height/2;void #<menu.cpp>
begin() -> void #<menu.h>
border(TILE* tile) -> void #<new_game.h>
but : button[] #<menu.cpp>
button _type_ #<menu.h>
buttonW : const int #<menu.cpp>
click(int* i, int* j) -> void #<new_game.h>
close_game() -> void #<menu.h>
core_game() -> void #<new_game.h>
delete_pair(TILE* tile1, TILE* tile2) -> void #<new_game.h>
draw_pole() -> void #<new_game.h>
drawmenu() -> void #<menu.h>
end() -> void #<new_game.h>
height #<menu.h>
hours : int #<new_game.cpp>
init() -> void #<menu.h>
init_game() -> void #<new_game.h>
init_menu() -> void #<menu.h>
init_menu_pole() -> void #<new_game.h>
ins : button #<menu.cpp>
is_avalible(TILE* tile1) -> bool #<new_game.h>
is_season(int tile1, int tile2) -> bool #<new_game.h>
layout : const inttileH=55;vector #<new_game.cpp>
le : const int #<new_game.cpp>
library : TILE[] #<new_game.cpp>
logo : button #<menu.cpp>
lose : intminutes=0, seconds=0;button #<new_game.cpp>
main() -> int #<main.cpp>
maj_init() -> void #<new_game.h>
menu(int st) -> int #<menu.h>
mix_at_end() -> void #<new_game.h>
new_game() -> void #<new_game.h>
pairAVL : int #<new_game.cpp>
rd : auto #<new_game.cpp>
rng : auto #<new_game.cpp>
rule_about : button #<menu.cpp>
rules() -> void #<menu.h>
stopwatch() -> void #<new_game.h>
threadAcc : bool #<new_game.cpp>
tileW : const int #<new_game.cpp>
victory() -> void #<new_game.h>
width #<menu.h>
win : int #<new_game.cpp>
	TILE::name : char[] #<new_game.h>
	TILE::id : int #<new_game.h>
	TILE::count : int #<new_game.h>
	TILE::x : int #<new_game.h>
	TILE::y : int #<new_game.h>
	TILE::i : int #<new_game.h>
	TILE::j : int #<new_game.h>
	TILE::k : int #<new_game.h>
	TILE::bmp : IMAGE* #<new_game.h>
	button::x : int #<menu.h>
	button::y : int #<menu.h>
	button::dx : int #<menu.h>
	button::dy : int #<menu.h>
	button::bmp : IMAGE* #<menu.h>
